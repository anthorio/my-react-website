name: üß™ Playwright Tests

# Se ejecuta SOLO en Pull Requests hacia main
on:
  pull_request:
    branches: [ main ]

jobs:
  playwright-tests:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Checkout del c√≥digo
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # 2. Configurar Node.js 20.x
    - name: Setup Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    # 3. Instalar dependencias
    - name: Install dependencies
      run: npm ci
    
    # 4. Instalar navegadores de Playwright
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    # 5. Ejecutar tests de Playwright
    - name: Run Playwright Tests
      run: |
        # Iniciar el servidor en background
        npm start &
        # Esperar a que el servidor est√© listo
        npx wait-on http://localhost:3000 --timeout 60000
        # Ejecutar los tests
        npx playwright test
      env:
        NODE_OPTIONS: --openssl-legacy-provider
    
    # 6. Subir reporte HTML de Playwright (siempre)
    - name: Upload Playwright HTML Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
        if-no-files-found: ignore
    
    # 7. Subir capturas y videos si hay fallos
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results
        path: test-results/
        retention-days: 30
        if-no-files-found: ignore
    
    # 8. Mostrar resumen en el log del workflow
    - name: Test Summary
      if: always()
      run: |
        echo "üß™ PLAYWRIGHT TEST SUMMARY"
        echo "========================="
        echo ""
        if [ -d "playwright-report" ]; then
          echo "‚úÖ Test report generated successfully!"
          echo "üìä Download the 'playwright-report' artifact to view detailed results"
          echo ""
          echo "üìÅ Report includes:"
          echo "  - HTML report with test details and timeline"
          echo "  - Screenshots of failures (if any)"
          echo "  - Videos of test runs"
          echo "  - Trace files for debugging"
          echo ""
          echo "üí° To view the report:"
          echo "  1. Go to Actions tab ‚Üí This workflow run"
          echo "  2. Download 'playwright-report' artifact"
          echo "  3. Extract and open index.html in browser"
        else
          echo "‚ö†Ô∏è No test report found"
        fi
        echo ""
        echo "üéØ Tests covered: WCAG 2.2 accessibility, login flows, product functionality"
