name: CI - Build and Test

# Se ejecuta en Pull Requests y pushes a main
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    # 1. Checkout del código
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # 2. Configurar Node.js
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    # 3. Instalar dependencias
    - name: Install dependencies
      run: npm ci
    
    # 4. Verificar que no hay vulnerabilidades críticas
    - name: Audit dependencies
      run: npm audit --audit-level high
      continue-on-error: true
    
    # 5. Hacer el build de la aplicación
    - name: Build application
      run: npm run build
      env:
        NODE_OPTIONS: --openssl-legacy-provider
    
    # 6. Verificar que los archivos de build se generaron correctamente
    - name: Check build artifacts
      run: |
        if [ ! -d "build" ]; then
          echo "❌ Build directory not found"
          exit 1
        fi
        if [ ! -f "build/index.html" ]; then
          echo "❌ index.html not found in build directory"
          exit 1
        fi
        echo "✅ Build artifacts verified successfully"
        ls -la build/
    
    # 7. Instalar Playwright browsers (solo para Node 20.x para evitar duplicados)
    - name: Install Playwright Browsers
      if: matrix.node-version == '20.x'
      run: npx playwright install --with-deps
    
    # 8. Ejecutar tests de Playwright (solo para Node 20.x)
    - name: Run Playwright Tests
      if: matrix.node-version == '20.x'
      run: |
        # Iniciar el servidor en background
        npm start &
        # Esperar a que el servidor esté listo
        npx wait-on http://localhost:3000 --timeout 60000
        # Ejecutar los tests
        npx playwright test
      env:
        NODE_OPTIONS: --openssl-legacy-provider
    
    # 9. Subir los reportes de Playwright si fallan
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: failure() && matrix.node-version == '20.x'
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
    
    # 10. Subir los archivos de build como artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '20.x'
      with:
        name: build-files
        path: build/
        retention-days: 7
